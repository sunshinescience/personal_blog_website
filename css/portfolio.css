
/* Portfolio page cards for content (nested) */
.content-cards{
   display: grid;
   grid-area: main;
   grid-template-columns:  auto 3.8fr;
   /* grid-template-rows: 200px 200px; */
   grid-auto-rows: auto;
   margin: 20px; /* Separates the cards */
   grid-template-areas: 
   "img-l txt-r";
   /* justify-content: center; */
   /* grid-gap: 1rem; */
   background-color: white;
   /* border: 2px solid black; */
}

.content-card-left{
   grid-area: img-l;
   /* background: #4f5b62; */
   background-size: cover;
   /* height: 150px; */
   /* width: 150px; */
   max-width: 150px;
   max-height: 150px;
   align-self: center;
   border: 2px solid orchid; 
   padding-left: 40px;
   padding-right: 40px;
}

.content-card-right{
   grid-area: txt-r;
   /* text-align: left; */
   /* word-break: break-all; */
   word-wrap: break-word; 
   /* border: 2px solid red; */
   padding-top: 20px;
   /* display: flex; */
   /* justify-content: center; */ /* Align items horizontally */
   align-items: center;  /* Align items vertically using flexbox */
   border: 2px solid red;
}

/* Nested grid for the area on right side of the card */
.nested-content-card-right{
   display: grid;
   grid-template-columns: 100%;
   grid-template-rows: 125px auto;
   grid-template-areas: 
   "c-intro"
   "c-read";
   /* border: 2px solid burlywood; */
}

/*
.nested-card-right > *{
   margin: 0;
   padding: 5px;
}
*/

.card-intro{
   grid-area: c-intro; 
   display: flex;
   align-items: flex-end; /* Aligning text at the bottom of this section of the grid via flex*/
   padding-bottom: 10px;
   height: 125px;
   margin-top: 0;
   margin-bottom: 10px;
}

.card-continueReading{
   grid-area: c-read; 
   /* border: 2px solid gold; */
   margin-top: 10px; 
   padding-top: 30px; 
   padding-bottom: 10px;
}

/* Styles for an individual project page */

/* Container for portfolio project text */
.nested-grid-portfolio{
   display: grid;
   width: 90vw;
   height: 100%;
   margin-top: 50px;
   grid-template-columns: 1fr;
   grid-template-rows: auto auto;
    /* Name rows and columns */
   grid-template-areas: 
   "title"
   "projct";
}

.portfolio-mid-text{
   grid-area: projct;
   color: black;
   width: 90vw;
   padding-bottom: 0;
   padding-top: 0;
}

/* Container for portfolio project title */
.portfolio-mid-title{
   grid-area: title;
   background: black;
   color: white;
   width: 90vw;
   height: 20vh;
   margin-bottom: 0;
   padding-bottom: 0;
}

.highlight {
   /* color: #9ea7aa; */
   color: #cfe1e5;
 }

 .highlight-2 {
    /* color: black; */
    color: #9ea7aa;
    font-weight: 450;
 }

/* Portfolio project title */
#portfolio-title {
   display: flex;
   align-items: center;
   justify-content: center;          
}

.sectionTitle {
   display: flex;
   align-items: center;
   justify-content: center; 
   padding-bottom: 10px; 
   font-size: 1.3rem;
}

.nested-vid-txt {
   display: grid;
   grid-template-columns: 600px 1fr;
   grid-auto-rows: auto;
   /* margin: 20px; */
   grid-template-areas: 
   "vid-l text-r";
   
   /* padding-bottom: 60px; */
   margin-bottom: 120px;
}

.project-text-right {
   grid-area: text-r;
   /* text-align: left; */
   /* word-break: break-all; */
   word-wrap: break-word; 
   /* border: 2px solid red; */
   /* padding-top: 20px; */
   /* display: flex; */
   /* justify-content: center; */ /* Align items horizontally */
   align-items: center;  /* Align items vertically using flexbox */
   padding-left: 50px;
   padding-right: 50px;
   margin: auto; /* Centering text vertically */
}

.video-left-container {
   background-color: #9ea7aa;
   padding: 60px;
   position: relative; /* Needed this parent container for the button to be positioned relative, and the button positioned absolute. This helped to center the button. */
   /* border: 2px solid black; */
   /* box-shadow: 10px 10px 8px #6a7274; */
}

#video-player {
   display: flex;
   grid-area: vid-l;
   justify-content: center;  /* Align items horizontally */
   /* border: 60px solid #9ea7aa; */ /* I want buttons on the border. So I'll try a work around by adding a background color in the container and padding. */
   /* border: 60px solid black; */
   /* width: 600px; */
   height: 100%;  /* The video was pushing the footer up because the height was 100%, it was too large. */
   /* min-height: 200px; */ /* When making the page small, the video zooms in */
}

#video {
   width: 100%;
   /* height: auto; */ /* It was set like this initially, to get it to stay the size inside of the container */
   height: 100%;
   object-fit: cover;
}

/*
.controls {
   display: flex;
   position: absolute;
}
*/

/* When you make an element position: relative, all the child elements which are position: absolute will be positioned inside the parent element. */

.video-view {
   position: relative;
   width: 500px;
   height: 300px;
 }
 
 .video-view .video {
   position: absolute;
   width: 100%;
   height: 100%;
   object-fit: cover;
   background-color: #ccc;
 }
 
 .video-view .video-content {
   position: absolute;
   bottom: 0px;
 }


#button-1 {
   background-color: black;
   border: 1px solid black;
   padding: 3px 3px;
   opacity: 1;
   transition: 0.3s;
   cursor: pointer;
   border-radius: 50%;
   margin: 0;
   position: absolute; /* The container needs to be position relative and then things inside can be position absolute */
   bottom: 20px;
   left: 46%;
   -ms-transform: translate(-50%, -50%);
   transform: translate(-50%, -50%);
  }
 
#button-1:hover {
   /* opacity: 0.6; */
   background-color: #edf0f1;
   border: 1px solid #edf0f1; 
}

.hoverClass:hover {
   background-color: #edf0f1 !important;
   border: 1px solid #edf0f1 !important; 
}

#button-2 {
  background-color: black;
  border: 1px solid black;
  padding: 3px 3px;
  opacity: 1;
  transition: 0.3s;
  cursor: pointer;
  border-radius: 50%;
  margin: 0;
  position: absolute;
  bottom: 20px;
  left: 50%;
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
 }

#button-2:hover {
   background-color: #edf0f1;
   border: 1px solid #edf0f1; 
}

#button-3 {
   background-color: black;
   border: 1px solid black;
   padding: 3px 3px;
   opacity: 1;
   transition: 0.3s;
   cursor: pointer;
   border-radius: 50%;
   margin: 0;
   position: absolute;
   bottom: 20px;
   left: 54%;
   -ms-transform: translate(-50%, -50%);
   transform: translate(-50%, -50%);
  }
 
#button-3:hover {
   background-color: #edf0f1;
   border: 1px solid #edf0f1; 
}

.arrow {
   cursor: pointer;
   /* border: solid #edf0f1; */
   border: solid black;
   border-width: 0 3px 3px 0;
   display: inline-block;
   padding: 8px;
   /* transition: border 2s ease-out; */
}

.arrow:hover {
   border-color: #edf0f1;
}

.right {
   transform: rotate(-45deg);
   -webkit-transform: rotate(-45deg);
   position: absolute;
   top: 50%;
   left: 93%;
}

.left {
  transform: rotate(135deg);
  -webkit-transform: rotate(135deg);
  position: absolute;
  top: 50%;
  left: 4%;
}

